/* 
 * Global Animations CSS
 * 
 * This file contains reusable animations that can be applied throughout the app.
 * They're designed to be used with Tailwind CSS classes but can also be used 
 * independently.
 */

/* Entry animations */
.animate-fade-in {
  animation: fade-in 0.5s ease-out forwards;
}

.animate-scale-in {
  animation: scale-in 0.5s ease-out forwards;
}

.animate-slide-in-top {
  animation: slide-in-top 0.5s ease-out forwards;
}

.animate-slide-in-bottom {
  animation: slide-in-bottom 0.5s ease-out forwards;
}

.animate-slide-in-left {
  animation: slide-in-left 0.5s ease-out forwards;
}

.animate-slide-in-right {
  animation: slide-in-right 0.5s ease-out forwards;
}

/* Attention animations */
.animate-bounce-subtle {
  animation: bounce-subtle 2s ease-in-out infinite;
}

.animate-pulse-soft {
  animation: pulse-soft 2s ease-in-out infinite;
}

.animate-ping-subtle {
  animation: ping-subtle 1s cubic-bezier(0, 0, 0.2, 1) infinite;
}

.animate-pulse-ring {
  animation: pulse-ring 1.5s cubic-bezier(0.24, 0, 0.38, 1) infinite;
}

.animate-shimmer {
  background-image: linear-gradient(
    to right,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.3) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite linear;
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

.animate-pop {
  animation: pop 0.3s ease-in-out;
}

.animate-rotate {
  animation: rotate-icon 2s linear infinite;
}

.animate-progress {
  animation: progress-bar 2s ease-out forwards;
}

.animate-blink {
  animation: blink 1.2s ease-in-out infinite;
}

/* Utility classes for delayed animations */
.delay-100 {
  animation-delay: 100ms;
}

.delay-200 {
  animation-delay: 200ms;
}

.delay-300 {
  animation-delay: 300ms;
}

.delay-400 {
  animation-delay: 400ms;
}

.delay-500 {
  animation-delay: 500ms;
}

.delay-750 {
  animation-delay: 750ms;
}

.delay-1000 {
  animation-delay: 1000ms;
}

/* Animation speed modifiers */
.duration-300 {
  animation-duration: 300ms;
}

.duration-500 {
  animation-duration: 500ms;
}

.duration-750 {
  animation-duration: 750ms;
}

.duration-1000 {
  animation-duration: 1000ms;
}

.duration-2000 {
  animation-duration: 2000ms;
}

/* Apply these classes to add a smooth transition to any element */
.transition-all-quick {
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.transition-all-medium {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.transition-all-slow {
  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Interactive hover effects */
.hover-scale {
  transition: transform 0.2s ease;
}

.hover-scale:hover {
  transform: scale(1.05);
}

.hover-float {
  transition: transform 0.2s ease;
}

.hover-float:hover {
  transform: translateY(-5px);
}

.hover-glow {
  transition: box-shadow 0.3s ease;
}

.hover-glow:hover {
  box-shadow: 0 0 10px 0 rgba(var(--primary-rgb), 0.3);
}

/* Container animations for groups of items */
.stagger-children > * {
  opacity: 0;
  transform: translateY(10px);
  animation: slide-in-bottom 0.5s ease-out forwards;
}

/* Add this to your App.css or global styles */
@for $i from 1 through 20 {
  .stagger-children > *:nth-child(#{$i}) {
    animation-delay: calc(#{$i} * 75ms);
  }
}

/* Add the following animations if they aren't already there */

/* Pulse soft animation for subtle pulsing effects */
@keyframes pulseSoft {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    transform: scale(0.98);
  }
}

.animate-pulse-soft {
  animation: pulseSoft 2s ease-in-out infinite;
}

/* Fade in fast animation */
@keyframes fadeInFast {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.animate-fadeInFast {
  animation: fadeInFast 0.3s ease-out forwards;
}

/* Slide in from bottom animation */
@keyframes slideInBottom {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-slideInBottom {
  animation: slideInBottom 0.4s ease-out forwards;
}

/* Fade in animation */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.animate-fadeIn {
  animation: fadeIn 0.5s ease-out forwards;
}

/* fadeInUp animation */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fadeInUp {
  animation: fadeInUp 0.5s ease-out forwards;
} 