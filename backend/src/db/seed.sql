-- Seed data for WorldZoneCRM Database

-- Payment Terms data
INSERT INTO payment_terms (name, days, early_payment_discount_percent, early_payment_days, late_payment_fee_percent) 
VALUES 
('Net 30', 30, 2.00, 10, 5.00),
('Net 15', 15, 1.50, 5, 7.50),
('Net 45', 45, 3.00, 15, 4.00),
('Net 60', 60, 3.50, 20, 8.00);

-- Financial Summary data (if not already generated by the system)
INSERT INTO financial_summary (id, total_orders, total_orders_change, accounts_receivable, accounts_receivable_change, average_days_to_pay, average_days_to_pay_change, average_order_value, average_order_value_change, total_lifetime_value, total_lifetime_value_change)
VALUES 
(UUID(), 156000.00, 5.2, 32000.00, -2.1, 18, -1, 3500.00, 3.5, 980000.00, 4.2);

-- Sample Orders (using existing customers)
INSERT INTO orders (id, customer_id, order_number, status, total_amount, origin, destination, transport_mode, created_at, delivery_date, tracking_number, notes)
SELECT 
    UUID(),
    id,
    CONCAT('ORD-', LPAD(FLOOR(RAND() * 10000), 4, '0')),
    ELT(FLOOR(RAND() * 3) + 1, 'processing', 'completed', 'cancelled'),
    ROUND(1000 + RAND() * 9000, 2),
    ELT(FLOOR(RAND() * 5) + 1, 'New York', 'Los Angeles', 'Chicago', 'Houston', 'Miami'),
    ELT(FLOOR(RAND() * 5) + 1, 'London', 'Shanghai', 'Sydney', 'Dubai', 'Rotterdam'),
    ELT(FLOOR(RAND() * 4) + 1, 'sea', 'air', 'road', 'rail'),
    DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 90) DAY),
    DATE_ADD(NOW(), INTERVAL FLOOR(RAND() * 30) DAY),
    CONCAT('TRK', LPAD(FLOOR(RAND() * 1000000), 6, '0')),
    ELT(FLOOR(RAND() * 3) + 1, 'Priority shipment', 'Fragile items included', 'Requires special handling')
FROM customers
LIMIT 5;

-- Sample Order Items
INSERT INTO order_items (id, order_id, description, quantity, unit_price, created_at)
SELECT 
    UUID(),
    o.id,
    ELT(FLOOR(RAND() * 5) + 1, 'Shipping Container 20ft', 'Air Freight Package', 'Trucking Service', 'Express Delivery', 'Insurance'),
    FLOOR(RAND() * 5) + 1,
    ROUND(100 + RAND() * 900, 2),
    o.created_at
FROM orders o;

-- Add a second item to each order
INSERT INTO order_items (id, order_id, description, quantity, unit_price, created_at)
SELECT 
    UUID(),
    o.id,
    ELT(FLOOR(RAND() * 5) + 1, 'Customs Clearance', 'Documentation', 'Handling Fee', 'Storage', 'Packaging'),
    FLOOR(RAND() * 3) + 1,
    ROUND(50 + RAND() * 200, 2),
    o.created_at
FROM orders o;

-- Sample Contacts (for existing customers)
INSERT INTO contacts (id, customer_id, first_name, last_name, title, email, phone, initials, last_contacted_at, created_at)
SELECT 
    UUID(),
    id,
    ELT(FLOOR(RAND() * 5) + 1, 'John', 'Jane', 'Robert', 'Sarah', 'Michael'),
    ELT(FLOOR(RAND() * 5) + 1, 'Smith', 'Johnson', 'Williams', 'Brown', 'Jones'),
    ELT(FLOOR(RAND() * 5) + 1, 'Operations Manager', 'Logistics Director', 'Supply Chain Manager', 'CEO', 'Procurement Manager'),
    CONCAT('contact', FLOOR(RAND() * 1000), '@example.com'),
    CONCAT('+1', LPAD(FLOOR(RAND() * 10000000000), 10, '0')),
    UPPER(CONCAT(LEFT(ELT(FLOOR(RAND() * 5) + 1, 'John', 'Jane', 'Robert', 'Sarah', 'Michael'), 1), 
                LEFT(ELT(FLOOR(RAND() * 5) + 1, 'Smith', 'Johnson', 'Williams', 'Brown', 'Jones'), 1))),
    DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 30) DAY),
    DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 90) DAY)
FROM customers;

-- Create temporary table with the first 5 customer IDs
CREATE TEMPORARY TABLE temp_top_customers (id VARCHAR(36));
INSERT INTO temp_top_customers (id)
SELECT id FROM customers LIMIT 5;

-- Add a second contact for some customers
INSERT INTO contacts (id, customer_id, first_name, last_name, title, email, phone, initials, last_contacted_at, created_at)
SELECT 
    UUID(),
    c.id,
    ELT(FLOOR(RAND() * 5) + 1, 'David', 'Lisa', 'Chris', 'Amanda', 'James'),
    ELT(FLOOR(RAND() * 5) + 1, 'Davis', 'Miller', 'Wilson', 'Moore', 'Taylor'),
    ELT(FLOOR(RAND() * 5) + 1, 'Finance Director', 'Shipping Coordinator', 'Warehouse Manager', 'Account Manager', 'VP Operations'),
    CONCAT('contact', FLOOR(RAND() * 1000), '@example.com'),
    CONCAT('+1', LPAD(FLOOR(RAND() * 10000000000), 10, '0')),
    UPPER(CONCAT(LEFT(ELT(FLOOR(RAND() * 5) + 1, 'David', 'Lisa', 'Chris', 'Amanda', 'James'), 1), 
                LEFT(ELT(FLOOR(RAND() * 5) + 1, 'Davis', 'Miller', 'Wilson', 'Moore', 'Taylor'), 1))),
    DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 30) DAY),
    DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 90) DAY)
FROM customers c
JOIN temp_top_customers ttc ON c.id = ttc.id;

-- Insert sample communications
INSERT INTO communications (id, customer_id, type, subject, content, date, status, sender_name, sender_email, recipient_name, recipient_email, duration_minutes, summary, from_name, from_title, to_name, to_title, tags, created_at, updated_at)
SELECT 
    UUID(),
    c.id,
    'email',
    'Booking Confirmation',
    'Thank you for your booking. Your reference number is #12345.',
    NOW(),
    'sent',
    'John Smith',
    'john.smith@voltus.com',
    'Client Name',
    'client@example.com',
    NULL,
    'Booking confirmation sent',
    'John Smith',
    'Account Manager',
    'Client Name',
    'Logistics Manager',
    '["booking", "confirmation"]',
    NOW(),
    NOW()
FROM customers c
LIMIT 1;

-- Add a call communication
INSERT INTO communications (id, customer_id, type, subject, content, date, status, sender_name, sender_email, recipient_name, recipient_email, duration_minutes, summary, from_name, from_title, to_name, to_title, tags, created_at, updated_at)
SELECT 
    UUID(),
    c.id,
    'call',
    'Follow-up Call',
    'Discussed shipping requirements for next month',
    NOW(),
    'completed',
    'Sarah Johnson',
    'sarah.johnson@voltus.com',
    'Client Contact',
    'contact@example.com',
    15,
    'Positive call about future opportunities',
    'Sarah Johnson',
    'Sales Manager',
    'Client Contact',
    'Operations Director',
    '["sales", "follow-up"]',
    NOW(),
    NOW()
FROM customers c
ORDER BY RAND()
LIMIT 1;

-- Add a note communication
INSERT INTO communications (id, customer_id, type, subject, content, date, status, sender_name, sender_email, recipient_name, recipient_email, duration_minutes, summary, from_name, from_title, to_name, to_title, tags, created_at, updated_at)
SELECT 
    UUID(),
    c.id,
    'note',
    'Internal Meeting Notes',
    'Team discussed strategy for client expansion',
    NOW(),
    'internal',
    'Mike Wilson',
    'mike.wilson@voltus.com',
    NULL,
    NULL,
    NULL,
    'Strategy meeting for client growth',
    'Mike Wilson',
    'Operations Director',
    NULL,
    NULL,
    '["internal", "strategy"]',
    NOW(),
    NOW()
FROM customers c
ORDER BY RAND()
LIMIT 1;

-- Add more email communications
INSERT INTO communications (id, customer_id, type, subject, content, date, status, sender_name, sender_email, recipient_name, recipient_email, duration_minutes, summary, from_name, from_title, to_name, to_title, tags, created_at, updated_at)
SELECT 
    UUID(),
    c.id,
    'email',
    CONCAT('Quote Request #', FLOOR(RAND() * 1000)),
    'Requesting quote for air freight shipment to Asia',
    NOW(),
    'sent',
    'Emma Davis',
    'emma.davis@voltus.com',
    'Client Representative',
    'rep@example.com',
    NULL,
    'New quote request received',
    'Emma Davis',
    'Sales Representative',
    'Client Representative',
    'Procurement Manager',
    '["quote", "air-freight"]',
    NOW(),
    NOW()
FROM customers c
ORDER BY RAND()
LIMIT 3;

-- Add more call communications
INSERT INTO communications (id, customer_id, type, subject, content, date, status, sender_name, sender_email, recipient_name, recipient_email, duration_minutes, summary, from_name, from_title, to_name, to_title, tags, created_at, updated_at)
SELECT 
    UUID(),
    c.id,
    'call',
    'Service Review',
    'Quarterly service review with client',
    NOW(),
    'completed',
    'Tom Brown',
    'tom.brown@voltus.com',
    'Client Manager',
    'manager@example.com',
    45,
    'Successful quarterly review',
    'Tom Brown',
    'Customer Success',
    'Client Manager',
    'Supply Chain Manager',
    '["review", "quarterly"]',
    NOW(),
    NOW()
FROM customers c
ORDER BY RAND()
LIMIT 2;

-- Sample Activities
INSERT INTO activities (id, customer_id, date, type, description, reference_id, reference_type, created_at)
SELECT 
    UUID(),
    c.id,
    DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 30) DAY),
    ELT(FLOOR(RAND() * 5) + 1, 'order_created', 'payment_received', 'quote_sent', 'meeting_scheduled', 'call_completed'),
    ELT(FLOOR(RAND() * 5) + 1, 'New order placed', 'Payment received for invoice', 'Quote sent for new shipment', 'Meeting scheduled with customer', 'Call completed with customer'),
    UUID(),
    ELT(FLOOR(RAND() * 3) + 1, 'order', 'invoice', 'communication'),
    DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 30) DAY)
FROM customers c
LIMIT 15;

-- Update dashboard_stats with aggregated information
UPDATE dashboard_stats 
SET 
    total_customers = (SELECT COUNT(*) FROM customers),
    total_orders = (SELECT COUNT(*) FROM orders),
    total_revenue = (SELECT COALESCE(SUM(total_amount), 0) FROM invoices),
    pending_bookings = (SELECT COUNT(*) FROM bookings WHERE status = 'pending'),
    updated_at = NOW()
WHERE id IS NOT NULL
LIMIT 1;

-- If no dashboard_stats exist, create one
INSERT INTO dashboard_stats (id, total_customers, total_orders, total_revenue, pending_bookings, updated_at)
SELECT 
    UUID(),
    (SELECT COUNT(*) FROM customers),
    (SELECT COUNT(*) FROM orders),
    (SELECT COALESCE(SUM(total_amount), 0) FROM invoices),
    (SELECT COUNT(*) FROM bookings WHERE status = 'pending'),
    NOW()
FROM dual
WHERE NOT EXISTS (SELECT 1 FROM dashboard_stats LIMIT 1);

-- Drop temporary table
DROP TABLE IF EXISTS temp_top_customers; 